library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?geom_point
?geom_line
runApp()
runApp()
?geom_label
runApp()
runApp()
runApp()
knitr::opts_chunk$set(echo = TRUE)
primsummary2 <- primaryschools %>% group_by(subcounty,gender)%>%
summarise(total_enrollment=sum(enrolment))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(shiny)
library(ggplot2)
library(plotly)
library(DBI)
library(tidyverse)
library(RSQLite)
#install.packages("tidyverse")
prim_education <- read.csv("./data/primary_enrollment_sctypesex.csv")
prim_education
primdf <- prim_education %>%
pivot_longer(!subcounty, names_to = "Category",values_to = "Enrollment")%>%
mutate(Sex=ifelse(grepl("Boys",Category),"Male",
ifelse(grepl("Girls",Category),"Female","Other")))%>%
mutate(Year=ifelse(grepl("2017",Category), "2017",
ifelse(grepl("2018",Category),"2018",
ifelse(grepl("2019",Category),"2019","Other"))))
primdf
primary_long <- prim_education %>%
pivot_longer(cols = public_Boys_2017:private_Girls_2019,names_to = "schooltype_gender_year",values_to = "enrolment")%>%
separate("schooltype_gender_year",into = c("schooltype", "gender", "year"))
primary_long
mycon <- dbConnect(SQLite(),"./data/primary_enrollment_sctypesex.db")
dbListTables(mycon)
dbWriteTable(mycon, "primary_long",primary_long)
primsummary2 <- primaryschools %>% group_by(subcounty,gender)%>%
summarise(total_enrollment=sum(enrolment))
mycon <- dbConnect(SQLite(),"./data/primary_enrollment_sctypesex.db")
dbListTables(mycon)
#dbWriteTable(mycon, "primary_long",primary_long)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(shiny)
library(ggplot2)
library(plotly)
library(DBI)
library(tidyverse)
library(RSQLite)
#install.packages("tidyverse")
prim_education <- read.csv("./data/primary_enrollment_sctypesex.csv")
prim_education
primdf <- prim_education %>%
pivot_longer(!subcounty, names_to = "Category",values_to = "Enrollment")%>%
mutate(Sex=ifelse(grepl("Boys",Category),"Male",
ifelse(grepl("Girls",Category),"Female","Other")))%>%
mutate(Year=ifelse(grepl("2017",Category), "2017",
ifelse(grepl("2018",Category),"2018",
ifelse(grepl("2019",Category),"2019","Other"))))
primdf
primary_long <- prim_education %>%
pivot_longer(cols = public_Boys_2017:private_Girls_2019,names_to = "schooltype_gender_year",values_to = "enrolment")%>%
separate("schooltype_gender_year",into = c("schooltype", "gender", "year"))
primary_long
mycon <- dbConnect(SQLite(),"./data/primary_enrollment_sctypesex.db")
dbListTables(mycon)
#dbWriteTable(mycon, "primary_long",primary_long)
primaryschools <- dbReadTable(mycon,"primary_long")
primaryschools
primsummary2 <- primaryschools %>% group_by(subcounty,gender)%>%
summarise(total_enrollment=sum(enrolment))
primsummary2
ggplot(primsummary2,aes(x=subcounty,y=total_enrollment,color=gender,group=gender))+
geom_line()
ggplot(primsummary2,aes(x=subcounty,y=total_enrollment,color=gender,group=gender))+
geom_bar()
?geom_bar
ggplot(primsummary2,aes(x=subcounty,y=total_enrollment,color=gender,group=gender))
ggplot(primsummary2,aes(x=subcounty,y=total_enrollment,color=gender,group=gender))+
geom_bar()
ggplot(primsummary2,aes(x=subcounty,y=total_enrollment,color=gender,group=gender))+
geom_bar()
ggplot(primsummary2,aes(x=subcounty,y=total_enrollment,color=gender,group=gender))
ggplot(primsummary2,aes(x=subcounty,y=total_enrollment,color=gender,group=gender))+
geom_bar(stat = "identity")
ggplot(primsummary2,aes(x=subcounty,y=total_enrollment))+
geom_bar(stat = "identity")
ggplot(primsummary2,aes(x=subcounty,y=total_enrollment,color=gender,group=gender))+
geom_bar(stat = "identity")
ggplot(primsummary2,aes(x=subcounty,y=total_enrollment,fill = gender, color=gender,group=gender))+
geom_bar(stat = "identity")
ggplot(primsummary2,aes(x=subcounty,y=total_enrollment,fill = gender, color=gender,group=gender))+
geom_bar(position="dodge",stat = "identity")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
primsummary2 <- primaryschools %>% group_by(subcounty,year,gender)%>%
summarise(total_enrollment=sum(enrolment))
primsummary2
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(plotly)
library(plotly)
colnames(primary_long)
runApp()
plotly(data = primsummary3, x=~schooltype,y=~total_enrollment)
runApp()
runApp()
plotly(data = primsummary3, x=~schooltype,y=~total_enrollment, type = "bar", color =~gender)
plotly(data = primsummary3, x=~schooltype,y=~total_enrollment, type = "bar", color =~gender)
plotly(data = primsummary3, x=~schooltype,y=~total_enrollment, type = "bar", color =~gender)
plotly(data = primsummary3, x=~schooltype,y=~total_enrollment, type = 'bar', color =~gender)
runApp()
runApp()
#plotly(data = primsummary3, x=~schooltype,y=~total_enrollment, type = 'bar', color =~gender)
plot_ly(data=primsummary3, x=~schooltype, y=~total_enrollment, name=~Sex, type = "scatter", mode="line")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
cropprod.data <- dbConnect(SQLite(),"data/crop.prod_db.db")
